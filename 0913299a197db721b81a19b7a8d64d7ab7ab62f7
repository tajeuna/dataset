################################## peer assessments ####################################################

################ importing necessary library for the assessment ########################################
library(data.table)
library(plyr)
library(dplyr)

##################### let's define temporary directory to download and extract online zip file #########
temp_download <- tempfile()
temp_unzip <- tempfile()
train_data <- tempfile()
###################### downloading the zip file in temp_download temporary directory ###################
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip",
              temp_download)

##################### unzip the zip file in temp_unzip temporary directory #############################
unzip(temp_download, exdir = temp_unzip)

#################### loading the training and testing data in train_data and test_data #################
dir <- list.files(temp_unzip)
path_train = paste(temp_unzip,"/",dir,"/train/X_train.txt",sep="")
path_test = paste(temp_unzip,"/",dir,"/test/X_test.txt",sep="")
train_data <- read.table(path_train)
test_data <- read.table(path_test)

########################################################################################################
####################################### Question 1 #####################################################
########################################################################################################

##################### merging train and test data into samsung_data ####################################
samsung_data <- rbind(train_data,test_data)


########################################################################################################
###################################### Question 2 ######################################################
########################################################################################################

#################### extracting measurements on the mean and standard deviation ########################

#################### loading the features data #########################################################
path_feature = paste(temp_unzip,"/",dir,"/features.txt",sep="")
features_data = read.table(path_feature)

##################### selecting variables indices in mean and standard deviation #######################
values <- filter(features_data,grepl("-mean()",V2)==TRUE | grepl("-std()",V2)==TRUE)
indices <- select(values,V1)

########################## extracting corresponding rows in the samsung_data ###########################
samsung_mean_std <- select(samsung_data,indices$V1)


########################################################################################################
###################################### Question 3 ######################################################
########################################################################################################

########################## naming activities ###########################################################

################ loading data (train + test) from activity labels and the y data #######################
path_label = paste(temp_unzip,"/",dir,"/activity_labels.txt",sep="")
path_y_train = paste(temp_unzip,"/",dir,"/train/y_train.txt",sep="")
path_y_test = paste(temp_unzip,"/",dir,"/test/y_test.txt",sep="")
activity_labels = read.table(path_label)
y_train <- read.table(path_y_train)
y_test <- read.table(path_y_test)
y_samsung <- rbind(y_train,y_test)

################ melting data from y_samsung and activity_labels #######################################
labels_name <- join(y_samsung,activity_labels)

################ adding columns on the samsung_mean_std to label activities ############################
samsung_mean_std$activity_name <- labels_name$V2
samsung_mean_std$activity_label <- labels_name$V1


########################################################################################################
###################################### Question 4 ######################################################
########################################################################################################

########################### naming variables ###########################################################
previous_var <- names(samsung_mean_std)
for (i in 1:79){
  names(samsung_mean_std)[i] <- as.character(values$V2[i])
}


########################################################################################################
###################################### Question 5 ######################################################
########################################################################################################

########################### merging subject data from train and test ###################################
path_subject_train = paste(temp_unzip,"/",dir,"/train/subject_train.txt",sep="")
path_subject_test = paste(temp_unzip,"/",dir,"/test/subject_test.txt",sep="")
subject_train <- read.table(path_subject_train)
subject_test <- read.table(path_subject_test)
subject <- rbind(subject_train,subject_test)

########################### creating new samsung data with subject column ##############################
samsung_mean_std2 = samsung_mean_std
samsung_mean_std2$subject <- subject$V1

########################## grouping observations #######################################
group_per_activity = samsung_mean_std2[0,1:79]
group_per_subject = samsung_mean_std2[0,1:79]
for (i in 1:6){
  activity <- filter(samsung_mean_std2,samsung_mean_std2$activity_label==i)
  for (j in 1:79){
    group_per_activity[i,j] <- mean(as.numeric(activity[,j]))
  }
}
group_per_activity$activity <- activity_labels$V2

for (i in 1:30){
  activity <- filter(samsung_mean_std2,samsung_mean_std2$subject==i)
  for (j in 1:79){
    group_per_subject[i,j] <- mean(as.numeric(activity[,j]))
  }
}
group_per_subject$subject <- seq(1:30)
for (i in 1:79){
  var1 = paste("avg_",as.character(values$V2[i]),sep="")
  names(group_per_activity)[i] <- var
  names(group_per_subject)[i] <- var
}
write.table(samsung_mean_std,file="/home/tajeuna/rdata/samsung_mean_std.txt",row.names = F,col.names = T)
write.table(samsung_mean_std2,file="/home/tajeuna/rdata/samsung_mean_std2.txt",row.names = F,col.names = T)
write.table(group_per_activity,file="/home/tajeuna/rdata/group_per_activity.txt",row.names = F,col.names = T)
write.table(group_per_subject,file="/home/tajeuna/rdata/group_per_subject.txt",row.names = F,col.names = T)
